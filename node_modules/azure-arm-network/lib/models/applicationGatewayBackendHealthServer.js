/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * @class
 * Initializes a new instance of the ApplicationGatewayBackendHealthServer class.
 * @constructor
 * Application gateway backendhealth http settings.
 *
 * @member {string} [address] IP address or FQDN of backend server.
 *
 * @member {object} [ipConfiguration] Reference of IP configuration of backend
 * server.
 *
 * @member {string} [ipConfiguration.id] Resource ID.
 *
 * @member {string} [health] Health of backend server. Possible values include:
 * 'Unknown', 'Up', 'Down', 'Partial', 'Draining'
 *
 */
class ApplicationGatewayBackendHealthServer {
  constructor() {
  }

  /**
   * Defines the metadata of ApplicationGatewayBackendHealthServer
   *
   * @returns {object} metadata of ApplicationGatewayBackendHealthServer
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ApplicationGatewayBackendHealthServer',
      type: {
        name: 'Composite',
        className: 'ApplicationGatewayBackendHealthServer',
        modelProperties: {
          address: {
            required: false,
            serializedName: 'address',
            type: {
              name: 'String'
            }
          },
          ipConfiguration: {
            required: false,
            serializedName: 'ipConfiguration',
            type: {
              name: 'Composite',
              className: 'SubResource'
            }
          },
          health: {
            required: false,
            serializedName: 'health',
            type: {
              name: 'String'
            }
          }
        }
      }
    };
  }
}

module.exports = ApplicationGatewayBackendHealthServer;
