/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for
 * license information.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

'use strict';

const models = require('./index');

/**
 * @class
 * Initializes a new instance of the ApplicationGatewayBackendHealthHttpSettings class.
 * @constructor
 * Application gateway BackendHealthHttp settings.
 *
 * @member {object} [backendHttpSettings] Reference of an
 * ApplicationGatewayBackendHttpSettings resource.
 *
 * @member {number} [backendHttpSettings.port] Port
 *
 * @member {string} [backendHttpSettings.protocol] Protocol. Possible values
 * include: 'Http', 'Https'
 *
 * @member {string} [backendHttpSettings.cookieBasedAffinity] Cookie based
 * affinity. Possible values include: 'Enabled', 'Disabled'
 *
 * @member {number} [backendHttpSettings.requestTimeout] Request timeout in
 * seconds. Application Gateway will fail the request if response is not
 * received within RequestTimeout. Acceptable values are from 1 second to 86400
 * seconds.
 *
 * @member {object} [backendHttpSettings.probe] Probe resource of an
 * application gateway.
 *
 * @member {string} [backendHttpSettings.probe.id] Resource ID.
 *
 * @member {array} [backendHttpSettings.authenticationCertificates] Array of
 * references to application gateway authentication certificates.
 *
 * @member {string} [backendHttpSettings.provisioningState] Provisioning state
 * of the backend http settings resource. Possible values are: 'Updating',
 * 'Deleting', and 'Failed'.
 *
 * @member {object} [backendHttpSettings.connectionDraining] Connection
 * draining of the backend http settings resource.
 *
 * @member {boolean} [backendHttpSettings.connectionDraining.enabled] Whether
 * connection draining is enabled or not.
 *
 * @member {number} [backendHttpSettings.connectionDraining.drainTimeoutInSec]
 * The number of seconds connection draining is active. Acceptable values are
 * from 1 second to 3600 seconds.
 *
 * @member {string} [backendHttpSettings.name] Name of the resource that is
 * unique within a resource group. This name can be used to access the
 * resource.
 *
 * @member {string} [backendHttpSettings.etag] A unique read-only string that
 * changes whenever the resource is updated.
 *
 * @member {array} [servers] List of ApplicationGatewayBackendHealthServer
 * resources.
 *
 */
class ApplicationGatewayBackendHealthHttpSettings {
  constructor() {
  }

  /**
   * Defines the metadata of ApplicationGatewayBackendHealthHttpSettings
   *
   * @returns {object} metadata of ApplicationGatewayBackendHealthHttpSettings
   *
   */
  mapper() {
    return {
      required: false,
      serializedName: 'ApplicationGatewayBackendHealthHttpSettings',
      type: {
        name: 'Composite',
        className: 'ApplicationGatewayBackendHealthHttpSettings',
        modelProperties: {
          backendHttpSettings: {
            required: false,
            serializedName: 'backendHttpSettings',
            type: {
              name: 'Composite',
              className: 'ApplicationGatewayBackendHttpSettings'
            }
          },
          servers: {
            required: false,
            serializedName: 'servers',
            type: {
              name: 'Sequence',
              element: {
                  required: false,
                  serializedName: 'ApplicationGatewayBackendHealthServerElementType',
                  type: {
                    name: 'Composite',
                    className: 'ApplicationGatewayBackendHealthServer'
                  }
              }
            }
          }
        }
      }
    };
  }
}

module.exports = ApplicationGatewayBackendHealthHttpSettings;
